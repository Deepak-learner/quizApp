{"version":3,"sources":["components/createQuestion.js","components/displayQuestion.js","components/addQuiz.js","components/studentData.js","components/teacherDashboard.js","components/studentDashboard.js","components/home.js","components/login.js","components/quizArray.js","components/takeQuiz.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","CreateQuestion","props","classes","React","useState","question","setQuestion","handleOption","e","index","quesOptions","options","target","value","className","noValidate","autoComplete","TextField","onChange","id","label","multiline","rows","defaultValue","variant","Button","color","onClick","update","style","alert","DisplayQuestion","ques","user","userDetails","Role","backgroundColor","textAlign","padding","map","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","Typography","flexGrow","palette","background","paper","AddQuiz","questions","startTime","duration","name","quizDetails","setQuizDetails","currentQuestion","setCurrentQuestion","showProfile","setShowProfile","AppBar","position","Tabs","event","newValue","length","correctAnswer","marks","indicatorColor","textColor","scrollButtons","aria-label","i","Tab","questionParam","quizDetailsQuestions","updateQuestion","valid","table","minWidth","StudentData","calories","fat","carbs","Name","Number","Email","Marks","console","log","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","TeacherDashboard","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","shortest","expandOpen","avatar","red","StudentDashboard","open","setOpen","handleClose","expanded","setExpanded","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","autoFocus","type","fullWidth","DialogActions","Card","border","CardHeader","Avatar","action","IconButton","title","subheader","CardMedia","image","CardContent","to","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","Home","Login","setValue","loginDetails","setLoginDetails","show","FormLabel","RadioGroup","FormControlLabel","control","Radio","checkSubmit","Quiz","setQues","showScore","setShowScore","score","setScore","seconds","setSeconds","useEffect","setTimeout","Grid","container","item","xs","sm","fontSize","marginRight","Fragment","Container","option","next","btnClick","App","setUserDetails","showLogin","setShowLogin","setRole","path","check","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8551cbdb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '20ch',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst CreateQuestion = (props) => {\r\n    const classes = useStyles();\r\n    const [question, setQuestion] = React.useState(props.question)\r\n\r\n    const handleOption = (e, index) => {\r\n        let quesOptions = question.options;\r\n        quesOptions[index] = e.target.value;\r\n        setQuestion({...question, options: quesOptions });\r\n    }\r\n\r\n    return <form className={classes.root} noValidate autoComplete=\"off\">\r\n    <TextField\r\n          value={question.question}\r\n          onChange={(e) => { setQuestion({...question, question: e.target.value }) }}\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={4}\r\n          defaultValue=\"Type Question\"\r\n          variant=\"outlined\"\r\n        />\r\n    <TextField\r\n          id=\"standard-multiline-flexible\"\r\n          label=\"Option 1\"\r\n          value={question.options[0]}\r\n          onChange={(e) => { handleOption(e, 0)  }}\r\n        />\r\n    <TextField\r\n          id=\"standard-multiline-flexible\"\r\n          label=\"Option 2\"\r\n          value={question.options[1]}\r\n          onChange={(e) => { handleOption(e, 1)  }}\r\n        />\r\n    <TextField\r\n          id=\"standard-multiline-flexible\"\r\n          label=\"Option 3\"\r\n          value={question.options[2]}\r\n          onChange={(e) => { handleOption(e, 2)  }}\r\n        />\r\n    <TextField\r\n          id=\"standard-multiline-flexible\"\r\n          label=\"Option 4\"\r\n          value={question.options[3]}\r\n          onChange={(e) => { handleOption(e, 3)  }}\r\n        />\r\n        <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"Correct Answer\"\r\n              value={question.options[4]}\r\n              onChange={(e) => { handleOption(e, 4)  }}\r\n            />\r\n    <Button variant=\"contained\" color=\"secondary\" onClick={() => { props.update(question) }}>\r\n                        Submit Question\r\n                    </Button>\r\n    <Button style={{margin:'5px'}} variant=\"contained\" color=\"primary\" onClick={() => {alert(\"Quiz Set-up Complete\")}}>\r\n                                        Setup Quiz\r\n    </Button>\r\n\r\n  </form>\r\n}\r\n\r\nexport default CreateQuestion\r\n","import React, {useState} from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst DisplayQuestion = (props) => {\r\n  const[question , setquestion] = useState(props.ques);\r\n\r\n\r\n  if(props.user.userDetails.Role == 'Teacher')\r\n  {\r\n  return (<div style={{backgroundColor : 'blue', textAlign : 'left' ,padding : '30px'}}>\r\n\r\n\r\n            <h2>Your Added Questions</h2>\r\n            {question.map((question) => {\r\n\r\n             return <div >\r\n             <p>{question.question}</p>\r\n             {question.options.map((options) => {return <p> <li> {options} </li> </p>})}\r\n             <hr/>\r\n             </div>\r\n           })}\r\n           </div>);\r\n    }\r\n\r\n\r\n    return (<div style={{backgroundColor : 'blue'}}>\r\n    \r\n    </div>)\r\n\r\n}\r\n\r\nexport default DisplayQuestion ;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport CreateQuestion from './createQuestion';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport DisplayQuestion from './displayQuestion';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst AddQuiz = (props) => {\r\n  const classes = useStyles();\r\n  const [quizDetails, setQuizDetails] = useState({\r\n      questions: [],\r\n      startTime: null,\r\n      duration: 0,\r\n      name: \"\"\r\n  });\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n\r\n\r\n  const handleChange = (event, newValue) => {\r\n      if(newValue == quizDetails.questions.length) {\r\n          setQuizDetails({...quizDetails, questions: [...quizDetails.questions, {\r\n              question: \"\",\r\n              options: [],\r\n              correctAnswer: \"\",\r\n              marks: 0\r\n          }] });\r\n\r\n      }\r\n\r\n      setCurrentQuestion(newValue);\r\n\r\n  };\r\n\r\n  const updateQuestion = (question, i) => {\r\n    let quizDetailsQuestions = quizDetails.questions;\r\n    quizDetailsQuestions[i] = question;\r\n    setQuizDetails({...quizDetails, questions: quizDetailsQuestions });\r\n    alert(\"Question Added Successfully ! . Press 'Show question' button to see your question.\");\r\n  }\r\n\r\n  let valid=false;\r\n  const [showProfile , setShowProfile] = useState(valid);\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={currentQuestion}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          {\r\n              quizDetails.questions.map((question, i) => {\r\n                  return <Tab label={\"Question \" + (i+1)} />\r\n              })\r\n          }\r\n\r\n          <Tab label=\"Add Question\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      {currentQuestion!=null && <TabPanel value={currentQuestion} index={currentQuestion}>\r\n                <CreateQuestion update={(questionParam) => {  updateQuestion(questionParam, currentQuestion) }}  question={quizDetails.questions[currentQuestion]}></CreateQuestion>\r\n\r\n      </TabPanel>}\r\n\r\n      <Button style={{margin:'10px'}} variant=\"contained\" color=\"secondary\" onClick={()=>{setShowProfile(valid => !valid) }}>\r\n          Show Questions\r\n      </Button>\r\n\r\n      {!showProfile ? (\r\n\r\n         <div>\r\n\r\n         </div>\r\n       ) : (\r\n       <div>\r\n\r\n      <DisplayQuestion ques={quizDetails.questions} user={props}/>\r\n    \r\n  </div>)}\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddQuiz;\r\n","import React ,{useState} from 'react';\r\nimport AddQuiz from './addQuiz';\r\nimport DisplayQuestion from './displayQuestion';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StudentData = (props) => {\r\n\r\n   const classes = useStyles();\r\n\r\n\r\n\r\n\r\n  function createData(name, calories, fat, carbs) {\r\n\r\n\r\n    return { name, calories, fat, carbs};\r\n  }\r\n\r\n   const rows = [\r\n     createData( props.userDetails.Name, props.userDetails.Number , props.userDetails.Email, props.userDetails.Marks),\r\n\r\n   ];\r\n\r\n   if(props.userDetails.Role=='Student')\r\n   {\r\n     return(\r\n     <div>\r\n     {console.log(props.userDetails.Role)}\r\n           <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"right\">Registration Number</TableCell>\r\n                <TableCell align=\"right\">Email Address</TableCell>\r\n                <TableCell align=\"right\">Marks</TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.calories}</TableCell>\r\n                  <TableCell align=\"right\">{row.fat}</TableCell>\r\n                  <TableCell align=\"right\">{row.carbs}</TableCell>\r\n\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n                </div>\r\n  );}\r\n  return (<div style={{backgroundColor : 'blue'}}>\r\n       No student added !\r\n  </div>)\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default StudentData;\r\n","import React ,{useState} from 'react';\r\nimport AddQuiz from './addQuiz';\r\nimport DisplayQuestion from './displayQuestion';\r\nimport Button from '@material-ui/core/Button';\r\nimport StudentData from './studentData';\r\n\r\nconst TeacherDashboard = (props) => {\r\n\r\nlet valid=false;\r\nconst [showProfile , setShowProfile] = useState(valid);\r\n\r\n\r\n    return (<div>\r\n\r\n        <h1>Hello {props.userDetails.Name} Teacher!!</h1>\r\n        <AddQuiz {...props}></AddQuiz>\r\n\r\n        <  Button style={{margin : '20px' }} variant=\"contained\" color=\"secondary\" onClick={()=>{setShowProfile(valid => !valid) }} >\r\n            Show student profiles\r\n        </Button>\r\n\r\n        {!showProfile ? (\r\n\r\n           <div></div>\r\n         ) : (\r\n         <div>\r\n        <StudentData {...props}/>\r\n    </div>)}\r\n    </div>)\r\n}\r\n\r\nexport default TeacherDashboard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst StudentDashboard = (props) => {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n   const handleClickOpen = () => {\r\n     setOpen(true);\r\n   };\r\n\r\n   const handleClose = () => {\r\n     setOpen(false);\r\n   };\r\n\r\n   const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n\r\nreturn <div>\r\n<h2>Hello {props.userDetails.Name} Student!!</h2>\r\n\r\n<Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\r\n    Join the group\r\n   </Button>\r\n   <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n     <DialogTitle id=\"form-dialog-title\">Join Group</DialogTitle>\r\n     <DialogContent>\r\n       <DialogContentText>\r\n        Join your faculty group by acess code provided by faculty\r\n       </DialogContentText>\r\n       <TextField\r\n         autoFocus\r\n         margin=\"dense\"\r\n         id=\"name\"\r\n         label=\"Acess Code\"\r\n         type=\"text\"\r\n         fullWidth\r\n       />\r\n     </DialogContent>\r\n     <DialogActions>\r\n       <Button onClick={handleClose} color=\"primary\">\r\n         Cancel\r\n       </Button>\r\n       <Button onClick={handleClose} color=\"primary\">\r\n         Join\r\n       </Button>\r\n\r\n     </DialogActions>\r\n   </Dialog>\r\n\r\n   <h3> Courses you are enrolled in : </h3>\r\n   <Card style={{color : 'black ' , textAlign : 'left' ,padding : '30px', border:'10px solid orange'}} className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            S\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Science subject\"\r\n\r\n        subheader=\"Faculty Name : Mr rajesh ,      Course Enrolled in : September 14, 2016\"\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"public/logo192.png\"\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          The quiz contain 10 question . For each correct answer , you will be alloted one marks and for wrong answer you will be alloted zero marks i.e no negative marking .\r\n        </Typography>\r\n        <Link to=\"/dashboard/quiz\"  >\r\n         Take Quiz </Link>\r\n\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Method:</Typography>\r\n          <Typography paragraph>\r\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\r\n            minutes.\r\n          </Typography>\r\n          <Typography paragraph>\r\n         Quiz\r\n          </Typography>\r\n          <Typography paragraph>\r\n          Quiz\r\n          </Typography>\r\n          <Typography>\r\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n    <Button >  <Link to=\"/\" >\r\n       Login </Link></Button>\r\n\r\n\r\n</div>\r\n}\r\n\r\nexport default StudentDashboard;\r\n","import TeacherDashboard from './teacherDashboard'\r\nimport StudentDashboard from './studentDashboard'\r\nimport Login from './login';\r\nimport React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if (props.userDetails.Role == 'Student') {\r\n        return <div>\r\n\r\n\r\n          <StudentDashboard  {...props}></StudentDashboard>\r\n\r\n\r\n        </div>\r\n    }\r\n    else{\r\n      return <div>\r\n\r\n\r\n             <TeacherDashboard {...props}></TeacherDashboard>\r\n\r\n      </div>\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n","import React ,{useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Home from './home';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n  const [value, setValue] = React.useState('Student');\r\nlet { userDetails } = props;\r\n const handleChange = (event) => {\r\n   setValue(event.target.value);\r\n   setLoginDetails({...loginDetails ,Role : value})\r\n\r\n };\r\n\r\n const handleData = (event) => {\r\n\r\n   setArrayLogin([... {loginDetails:{\r\n     Name: \"\",\r\n     Number: null,\r\n     Email: 0,\r\n     Role: \"\"\r\n   }}])\r\n\r\n\r\n\r\n };\r\n\r\n const [loginDetails, setLoginDetails] = useState(\r\n     props.userDetails\r\n );\r\n\r\n\r\n\r\n\r\n\r\n const [arrayLogin, setArrayLogin] = useState([]);\r\n\r\n\r\n\r\n\r\n  return (<Dialog open={props.show} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter your details\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            type=\"email\"\r\n            value={loginDetails.Name}\r\n            onChange={(e) =>{setLoginDetails({...loginDetails,Name:e.target.value})}}\r\n\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"ID number\"\r\n            type=\"number\"\r\n            value={loginDetails.Number}\r\n            onChange={(e) =>{setLoginDetails({...loginDetails,Number:e.target.value})}}\r\n\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            value={loginDetails.Email}\r\n            onChange={(e) =>{setLoginDetails({...loginDetails,Email:e.target.value})}}\r\n\r\n            fullWidth\r\n          />\r\n          <FormLabel component=\"legend\">Role</FormLabel>\r\n          <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n      <FormControlLabel value=\"Teacher\" control={<Radio />} label=\"Student\" />\r\n      <FormControlLabel value=\"Student\" control={<Radio />} label=\"Teacher\" />\r\n\r\n    </RadioGroup>\r\n\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n\r\n      <Button >  <Link to=\"/dashBoard\"  onClick={() => {props.checkSubmit({loginDetails})} }>\r\n         Login </Link></Button>\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n  );\r\n}\r\n","const quizDetails = ({\r\n    questions: [{\r\n      question: \"What is our national game\",\r\n      options: [\"Cricket\" , \"Hockey\" , \"Football\" , \"basketball\"],\r\n      correctAnswer: \"Hockey\",\r\n      marks: 0\r\n\r\n    },\r\n    {\r\n      question: \"Co founder of microsoft\",\r\n      options: [\"Bill gates\" , \"mark\" , \"sachin\" , \"virat\"],\r\n      correctAnswer: \"Bill gates\",\r\n      marks: 0\r\n\r\n    },\r\n    {\r\n      question: \"Co founder of facebook\",\r\n      options: [\"gates\" , \"sachin\" , \"mark\" , \"virat\"],\r\n      correctAnswer: \"mark\",\r\n      marks: 0\r\n\r\n    }\r\n\r\n  ]\r\n\r\n});\r\n\r\nexport default quizDetails ;\r\n","import React ,{useState} from 'react';\r\nimport quizDetails from './quizArray';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\nfunction Quiz(props) {\r\n\r\nconst [ques , setQues] = useState(0);\r\nconst [showScore , setShowScore]= useState(true);\r\nconst [score , setScore] = useState(0);\r\n\r\nconst [seconds, setSeconds] = React.useState(20);\r\n\r\n  React.useEffect(() => {\r\n    if (seconds > 0) {\r\n      setTimeout(() => setSeconds(seconds - 1), 1000);\r\n    } else {\r\n      setShowScore(false);\r\n      setSeconds('BOOOOM!');\r\n    }\r\n  });\r\n\r\n\r\nconst btnClick = (option) =>\r\n{\r\n  if(option == quizDetails.questions[ques].correctAnswer)\r\n  {\r\n    setScore(score+1);\r\n  }\r\n\r\n  let next=ques + 1;\r\n  if(next > quizDetails.questions.length - 1)\r\n  {\r\n    setShowScore(false);\r\n  }\r\n  else{\r\n\r\n    setQues(next);\r\n}}\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n   {showScore ? (\r\n     <div>\r\n     <h1> Online Quiz Exam </h1>\r\n     <Grid container spacing={3}>\r\n     <Grid item xs={12} sm={8}>\r\n        <h2> <AccessAlarmIcon style={{ fontSize: 30, color:\"primary\",marginRight:'5px' }}/>Time left : {seconds}</h2>\r\n       </Grid>\r\n       <Grid item xs={12} sm={4}>\r\n          <h2> Marks : 1</h2>\r\n        </Grid>\r\n      </Grid>\r\n\r\n     <div style={{color : 'black ' ,backgroundColor : '#F7DC6F ', textAlign : 'left' ,padding : '30px', border:'10px solid orange'}}>\r\n     <React.Fragment>\r\n\r\n      <Container maxWidth=\"sm\">\r\n      Question : {quizDetails.questions[ques].question}??\r\n      Choose the correct option :\r\n      {quizDetails.questions[ques].options.map((options) => (\r\n        <li><Button color='secondary' style={{margin:'10px'}}onClick={() => btnClick(options) }> {options} </Button></li> ))}\r\n        </Container>\r\n    </React.Fragment>\r\n    </div>\r\n    </div>\r\n\r\n  ):(<h1>You Scored {score} Marks !</h1>)}\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Quiz;\r\n","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport FirstPage from './components/firstPage';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Home from './components/home';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Login from './components/login';\r\nimport Quiz from './components/takeQuiz';\r\nimport quizDetails from './components/quizArray';\r\n\r\nfunction App() {\r\n\r\n  const [userDetails, setUserDetails] = useState({\r\n    Name: \"\",\r\n    Number: null,\r\n    Email: null,\r\n    Role: \"\",\r\n    Marks:0\r\n  });\r\n\r\n  const [showLogin, setShowLogin] = React.useState(false);\r\n\r\n  const [role, setRole] = useState('teacher');\r\n  const [quizQuestion, setQuizQuestion] = useState({questions: []});\r\n\r\nconst c=0;\r\n\r\n  const check= (e) =>{\r\n\r\n\r\n\r\n\r\n      setUserDetails({Role : e.loginDetails.Role , Name : e.loginDetails.Name , Email : e.loginDetails.Email , Number : e.loginDetails.Number });\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const handleClickOpen = (roleParam) => {\r\n      setRole(roleParam);\r\n      setShowLogin(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n    <Router>\r\n    <Switch>\r\n    <Route path=\"/dashboard/quiz\">\r\n      <Quiz/>\r\n    </Route>\r\n         <Route path=\"/dashboard\">\r\n           <Home userDetails={userDetails} />\r\n         </Route>\r\n         <Route path=\"/\">\r\n         <div>\r\n         <h1>Online Quiz Platform</h1>\r\n\r\n\r\n                     <Button variant=\"contained\" color=\"secondary\" onClick={() => { handleClickOpen('teacher') }}>\r\n                         Login\r\n                     </Button>\r\n\r\n\r\n               <Login checkSubmit={(e) => {check(e)}}  userDetails={userDetails}  show={showLogin} handleClose={() => { setShowLogin(false) }} ></Login>\r\n        </div>\r\n         </Route>\r\n\r\n       </Switch>\r\n</Router>\r\n\r\n\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}